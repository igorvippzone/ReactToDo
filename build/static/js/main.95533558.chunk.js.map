{"version":3,"sources":["context.js","Todo/TodoItem.js","Todo/TodoList.js","Todo/AddTodo.js","Loader.js","App.js","reportWebVitals.js","index.js"],"names":["Context","React","createContext","styles","li","display","justifyContent","alignItems","padding","border","borderRadius","marginBottom","input","marginRight","TodoItem","todo","index","onChange","removeTodo","useContext","classes","completed","push","style","className","join","checked","type","id","title","onClick","ul","listStyle","margin","TodoList","props","todos","map","onToggle","AddTodo","onCreate","defaultValue","useState","value","setValue","bind","event","target","clear","useInputValue","onSubmit","preventDefault","trim","App","setTodos","loading","setLoading","useEffect","fetch","then","response","json","setTimeout","Provider","filter","concat","Date","now","Loader","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.95533558.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Context = React.createContext();\r\n\r\nexport default Context;\r\n","import React, { useContext } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Context from \"../context\";\r\n\r\nconst styles = {\r\n  li: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    padding: \".5rem 1rem\",\r\n    border: \"1px solid #ccc\",\r\n    borderRadius: \"4px\",\r\n    marginBottom: \".5rem\",\r\n  },\r\n  input: {\r\n    marginRight: \"1rem\",\r\n  },\r\n};\r\n\r\nfunction TodoItem({ todo, index, onChange }) {\r\n  const { removeTodo } = useContext(Context);\r\n  const classes = [];\r\n\r\n  if (todo.completed) {\r\n    classes.push(\"done\");\r\n  }\r\n\r\n  return (\r\n    <li style={styles.li}>\r\n      <span className={classes.join(\" \")}>\r\n        \r\n        <input\r\n          checked={todo.completed}\r\n          type=\"checkbox\"\r\n          style={styles.input}\r\n          onChange={() => onChange(todo.id)}\r\n        />\r\n        <strong>{index + 1}</strong>\r\n        &nbsp;\r\n        {todo.title}\r\n      </span>\r\n\r\n      <button className=\"rm\" onClick={()=>removeTodo(todo.id)}>\r\n        &times;\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n\r\nTodoItem.propTypes = {\r\n  todo: PropTypes.object.isRequired,\r\n  index: PropTypes.number.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default TodoItem;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport TodoItem from \"./TodoItem\";\r\n\r\nconst styles = {\r\n  ul: {\r\n    listStyle: \"none\",\r\n    margin: 0,\r\n    padding: 0,\r\n  },\r\n};\r\n\r\nfunction TodoList(props) {\r\n  return (\r\n    <ul style={styles.ul}>\r\n     \r\n      {props.todos.map((todo, index) => {\r\n        return (\r\n          <TodoItem\r\n            todo={todo}\r\n            key={todo.id}\r\n            index={index}\r\n            onChange={props.onToggle}\r\n          />\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\n\r\nTodoList.propTypes = {\r\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  onToggle: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default TodoList;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction useInputValue(defaultValue = \"\") {\r\n  const [value, setValue] = useState(defaultValue);\r\n\r\n  return {\r\n    bind: {\r\n      value,\r\n      onChange: (event) => setValue(event.target.value),\r\n    },\r\n    clear: () => setValue(\"\"),\r\n    value: () => value,\r\n  };\r\n}\r\n\r\nfunction AddTodo({ onCreate }) {\r\n  const input = useInputValue(\"\");\r\n\r\n  function submitHandler(event) {\r\n    event.preventDefault();\r\n\r\n    if (input.value().trim()) {\r\n      onCreate(input.value());\r\n      input.clear()\r\n      // setValue(\"\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form style={{ marginBottom: \"1rem\" }} onSubmit={submitHandler}>\r\n      <input {...input.bind} />\r\n      <button type=\"submit\">Добавить</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nAddTodo.propTypes = {\r\n  onCreate: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default AddTodo;\r\n","import React from \"react\";\r\n\r\nexport default () => (\r\n  <div style={{ display: \"flex\", justifyContent: \"center\", margin: \".5rem\" }}>\r\n    <div className=\"lds-spinner\">\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n    </div>\r\n  </div>\r\n);\r\n","import React, { useEffect } from \"react\";\nimport TodoList from \"./Todo/TodoList\";\nimport Context from \"./context\";\nimport AddTodo from \"./Todo/AddTodo\";\nimport Loader from \"./Loader\";\n\nfunction App() {\n  const [todos, setTodos] = React.useState([]);\n  const [loading, setLoading] = React.useState(true);\n\n  useEffect(() => {\n    fetch(\"https://jsonplaceholder.typicode.com/todos?_limit=4\")\n      .then((response) => response.json())\n      .then((todos) => {\n        setTimeout(() => {\n          setTodos(todos);\n          setLoading(false)\n        }, 2000);\n      });\n  }, []);\n\n  function toggleTodo(id) {\n    setTodos(\n      todos.map((todo) => {\n        if (todo.id === id) {\n          todo.completed = !todo.completed;\n        }\n        return todo;\n      })\n    );\n  }\n  function removeTodo(id) {\n    setTodos(todos.filter((todo) => todo.id !== id));\n  }\n\n  function addTodo(title) {\n    setTodos(\n      todos.concat([\n        {\n          title,\n          id: Date.now(),\n          completed: false,\n        },\n      ])\n    );\n  }\n\n  return (\n    <Context.Provider value={{ removeTodo }}>\n      <div className=\"wrapper\">\n        <h1>Todo на React</h1>\n        <h2>Добавьте задачу!</h2>\n        <AddTodo onCreate={addTodo} />\n        {loading && <Loader />}\n\n        {todos.length ? (\n          <TodoList todos={todos} onToggle={toggleTodo} />\n        ) : (\n          loading ? null : <p>нет дел!</p>\n        )}\n      </div>\n    </Context.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}